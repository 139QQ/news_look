version: '3.8'

services:
  # PostgreSQL 主数据库
  postgresql:
    image: postgres:15-alpine
    container_name: newslook-postgresql
    restart: unless-stopped
    environment:
      POSTGRES_DB: newslook
      POSTGRES_USER: newslook
      POSTGRES_PASSWORD: newslook123
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgresql_data:/var/lib/postgresql/data
      - ./postgresql/init:/docker-entrypoint-initdb.d
      - ./postgresql/postgresql.conf:/etc/postgresql/postgresql.conf
    ports:
      - "5432:5432"
    command: >
      postgres
      -c config_file=/etc/postgresql/postgresql.conf
      -c shared_preload_libraries=pg_stat_statements
      -c log_statement=all
      -c log_duration=on
    networks:
      - newslook-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U newslook -d newslook"]
      interval: 30s
      timeout: 10s
      retries: 5

  # ClickHouse 分析数据库
  clickhouse:
    image: clickhouse/clickhouse-server:23.8-alpine
    container_name: newslook-clickhouse
    restart: unless-stopped
    environment:
      CLICKHOUSE_DB: newslook_analytics
      CLICKHOUSE_USER: newslook
      CLICKHOUSE_PASSWORD: newslook123
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - clickhouse_logs:/var/log/clickhouse-server
      - ./clickhouse/config.xml:/etc/clickhouse-server/config.xml
      - ./clickhouse/users.xml:/etc/clickhouse-server/users.xml
      - ./clickhouse/init:/docker-entrypoint-initdb.d
    ports:
      - "8123:8123"  # HTTP接口
      - "9000:9000"  # 原生接口
    networks:
      - newslook-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8123/ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    ulimits:
      nofile:
        soft: 262144
        hard: 262144

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: newslook-redis
    restart: unless-stopped
    command: >
      redis-server
      --appendonly yes
      --appendfsync everysec
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    networks:
      - newslook-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: newslook-nginx
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./ssl:/etc/nginx/ssl
    ports:
      - "80:80"
      - "443:443"
    networks:
      - newslook-network
    depends_on:
      - newslook-backend
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  # NewsLook 后端服务
  newslook-backend:
    build:
      context: ../../
      dockerfile: deploy/docker/Dockerfile.backend
    container_name: newslook-backend
    restart: unless-stopped
    environment:
      # 数据库配置
      PG_HOST: postgresql
      PG_PORT: 5432
      PG_DATABASE: newslook
      PG_USERNAME: newslook
      PG_PASSWORD: newslook123
      
      # ClickHouse配置
      CH_HOST: clickhouse
      CH_PORT: 8123
      CH_DATABASE: newslook_analytics
      CH_USERNAME: newslook
      CH_PASSWORD: newslook123
      
      # Redis配置
      REDIS_HOST: redis
      REDIS_PORT: 6379
      
      # 应用配置
      FLASK_ENV: production
      SECRET_KEY: ${SECRET_KEY:-newslook-production-secret-key}
      LOG_LEVEL: INFO
    volumes:
      - ../../data:/app/data
      - ../../logs:/app/logs
      - ../../configs:/app/configs
    ports:
      - "5000:5000"
    networks:
      - newslook-network
    depends_on:
      postgresql:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # NewsLook 前端服务
  newslook-frontend:
    build:
      context: ../../frontend
      dockerfile: ../deploy/docker/Dockerfile.frontend
    container_name: newslook-frontend
    restart: unless-stopped
    volumes:
      - frontend_dist:/app/dist
    networks:
      - newslook-network

  # 数据备份服务
  backup:
    image: postgres:15-alpine
    container_name: newslook-backup
    restart: "no"
    environment:
      PGPASSWORD: newslook123
    volumes:
      - ../../backups:/backups
      - ./backup/scripts:/scripts
    networks:
      - newslook-network
    depends_on:
      - postgresql
    command: |
      sh -c "
        while true; do
          echo 'Starting backup at $(date)'
          pg_dump -h postgresql -U newslook -d newslook > /backups/newslook_$(date +%Y%m%d_%H%M%S).sql
          echo 'Backup completed at $(date)'
          sleep 86400  # 每24小时备份一次
        done
      "

  # 监控服务 (Prometheus + Grafana)
  prometheus:
    image: prom/prometheus:latest
    container_name: newslook-prometheus
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - newslook-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  grafana:
    image: grafana/grafana:latest
    container_name: newslook-grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
      GF_INSTALL_PLUGINS: grafana-clickhouse-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    ports:
      - "3000:3000"
    networks:
      - newslook-network
    depends_on:
      - prometheus
      - clickhouse

volumes:
  postgresql_data:
    driver: local
  clickhouse_data:
    driver: local
  clickhouse_logs:
    driver: local
  redis_data:
    driver: local
  frontend_dist:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  newslook-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 